[Config RoverMobility]
description = Osg demo with mobile rover nodes
network = osgDemoRoverShowcase

*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"

**.hosts = 5

# coordinate system settings
*.coordinateSystem.sceneLongitude = 16.4472deg
*.coordinateSystem.sceneLatitude = 47.3925deg
**.coordinateSystemModule = "coordinateSystem"

# showing the map
**.groundModule = "ground"
**.osgEarthSceneVisualizerModule = "visualizer.osgVisualizer.sceneVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "mymap_v0205/mymap_v0205.earth"

# rover model
*.rover[*].osgModel = "car.ive.2.scale"

# mobility settings
*.rover[*].mobility.typename = "VehicleMobility"
*.rover[*].mobility.waypointProximity = 3m
*.rover[*].mobility.speed = 20mps
*.rover[*].mobility.coordinateSystemModule = "coordinateSystem"
*.rover[*].mobility.updateInterval = 100ms
*.rover[*].mobility.initFromDisplayString = false
*.rover[0].mobility.waypointFile = "waypoint0.txt"
*.rover[1].mobility.waypointFile = "waypoint1.txt"
*.rover[2].mobility.waypointFile = "waypoint2.txt"
*.rover[3].mobility.waypointFile = "waypoint3.txt"
*.rover[4].mobility.waypointFile = "waypoint4.txt"

*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

[Config WorldImagery]
extends = RoverMobility

*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "world_imagery.earth"

[Config ArcGisOnline]
extends = RoverMobility

*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "arcgisonline.earth"

[Config roverPhysicalLink]
description = Displaying physical link activity
extends = RoverMobility

# IPv4Configuartor settings
*.configurator.config = xmldoc("configuration.xml")

# temporary fix
**.forceBroadcast = true	# Enelkul nem megy a broadcast valamiert

# communication between the nodes
*.rover[*].numApps = 2
*.rover[*].app[0].typename = "UdpBasicApp"
*.rover[*].app[0].destAddresses = "192.168.1.255"
*.rover[*].app[0].packetName = "Broadcast"
*.rover[*].app[0].destPort = 1000
*.rover[*].app[0].messageLength = 100B
*.rover[0].app[0].startTime = 2s
*.rover[1].app[0].startTime = 2.3s
*.rover[2].app[0].startTime = 2.6s
*.rover[3].app[0].startTime = 2.9s
*.rover[4].app[0].startTime = 3.2s
*.rover[*].app[0].sendInterval = 1s

*.rover[*].app[1].typename = "UdpSink"
*.rover[*].app[1].localPort = 1000
*.rover[*].app[1].receiveBroadcast = true

# visualizer parameters
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "both"
**.signalPlane = "camera"
#*.visualizer.*.mediumVisualizer.signalPropagationAnimationSpeed = 1e-6	# ez kell a recording-hoz

*.visualizer.*.physicalLinkVisualizer.displayLinks = true
*.visualizer.*.physicalLinkVisualizer.packetFilter = "*Broadcast*"
*.visualizer.*.physicalLinkVisualizer.fadeOutTime = 10s

[Config roverObstacleLoss]
description = Displaying obstacle loss
extends = roverPhysicalLink

# physical environment
**.physicalEnvironment.ground.typename = "OsgEarthGround"
**.physicalEnvironment.coordinateSystemModule = "coordinateSystem"
*.radioMedium.obstacleLoss.typename = "DielectricObstacleLoss"

# visualizer parameters
*.visualizer.*.physicalLinkVisualizer.displayLinks = false
*.visualizer.*.obstacleLossVisualizer.displayIntersections = true
*.visualizer.*.obstacleLossVisualizer.displayFaceNormalVectors = true

[Config DroneMobility]
description = Osg demo with drone nodes
network = osgDemoDroneShowcase

*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer" # TODO: remove when enabled by default

**.hosts = 100

# coordinate system
*.coordinateSystem.sceneLongitude = 16.4472deg
*.coordinateSystem.sceneLatitude = 47.3925deg
#*.coordinateSystem.sceneHeading = 68.3deg

**.groundModule = "ground"
**.coordinateSystemModule = "coordinateSystem"
**.osgEarthSceneVisualizerModule = "visualizer.osgVisualizer.sceneVisualizer"

# customizing the scene on the map
*.visualizer.osgVisualizer.sceneVisualizer.sceneShading = false
*.visualizer.osgVisualizer.sceneVisualizer.sceneColor = "#000000"
*.visualizer.osgVisualizer.sceneVisualizer.sceneOpacity = 0

# showing the map
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "mymap_v0205/mymap_v0205.earth"

#*.drone[*].osgModel = "drone.osgb.10.scale.0,0,90.rot"
*.drone[*].osgModel = "3d/drone.ive.20.scale"

**.signalPlane = "camera"

# mobility settings
# drone mobility parameters
*.drone[*].mobility.initFromDisplayString = false
*.drone[*].mobility.typename = "MassMobility"
*.drone[*].mobility.initialZ = 650m
*.drone[*].mobility.constraintAreaMinX = 300m
*.drone[*].mobility.constraintAreaMinY = 300m
*.drone[*].mobility.constraintAreaMaxX = 1500m
*.drone[*].mobility.constraintAreaMaxY = 1500m
*.drone[*].mobility.constraintAreaMinZ = 650m
*.drone[*].mobility.constraintAreaMaxZ = 651m
*.drone[*].mobility.changeInterval = 2s
*.drone[*].mobility.angleDelta = uniform(-10deg, 10deg)
*.drone[*].mobility.speed = 20mps

# IPv4Configuartor settings
*.configurator.config = xmldoc("configuration.xml")

# Temporary fix
**.forceBroadcast = true	# Enelkul nem megy a broadcast valamiert

# communication between the nodes
#*.drone[*].numApps = 2
#*.drone[*].app[0].typename = "UdpBasicApp"
#*.drone[*].app[0].destAddresses = "192.168.1.255"
#*.drone[*].app[0].packetName = "Broadcast"
#*.drone[*].app[0].destPort = 1000
#*.drone[*].app[0].messageLength = 100B
#*.drone[0].app[0].startTime = 2s
#*.drone[1].app[0].startTime = 2.001s
#*.drone[2].app[0].startTime = 2.002s
#*.drone[3].app[0].startTime = 2.003s
#*.drone[4].app[0].startTime = 2.004s
#
#*.drone[*].app[0].sendInterval = 2s
#
#*.drone[*].app[1].typename = "UdpSink"
#*.drone[*].app[1].localPort = 1000
#*.drone[*].app[1].receiveBroadcast = true

# Visualizer parameters
#*.visualizer.*.mediumVisualizer.displayCommunicationRanges = true		# A host-ok elerik egymast?
#*.visualizer.*.mediumVisualizer.displaySignals = true
#*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "sphere"
#
#*.visualizer.*.physicalLinkVisualizer.displayLinks = true
#*.visualizer.*.physicalLinkVisualizer.packetFilter = "*Broadcast*"
#*.visualizer.*.physicalLinkVisualizer.fadeOutMode = "simulationTime"
#*.visualizer.*.physicalLinkVisualizer.fadeOutTime = 5s

[Config ArcGisOnlineDrone]
extends = DroneMobility

*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "arcgisonline.earth"